// This software is in the public domain.
//
// The software is provided "as is", without warranty of any kind,
// express or implied, including but not limited to the warranties
// of merchantability, fitness for a particular purpose, and
// noninfringement. In no event shall the author(s) be liable for any
// claim, damages, or other liability, whether in an action of
// contract, tort, or otherwise, arising from, out of, or in connection
// with the software or the use or other dealings in the software.
//
// Parts of this software were originally developed in the Database
// and Distributed Systems Group at the Technical University of
// Darmstadt, Germany:
//
//   http://www.informatik.tu-darmstadt.de/DVS1/

// Version 2.0
// Changes from version 1.x: New in version 2.0

package org.xmlmiddleware.xmldbms.datahandlers.external;

import org.xmlmiddleware.xmldbms.*;
import org.xmlmiddleware.xmldbms.datahandlers.*;
import org.xmlmiddleware.xmldbms.maps.*;

import java.sql.*;
import java.util.*;
import javax.sql.*;

// "IMPL:" Comments are implementors requirements or suggestions

/**
 * <p>DataHandler implementation for Oracle.</p>
 *
 * <p>Needs implementation by someone with access to an Oracle server and
 * JDBC coding skills.</p>
 *
 * @author Need Implementor
 * @version 2.0
 */
public class OracleHandler
   extends DataHandlerBase
{

   // ************************************************************************
   // Constructors
   // ************************************************************************

   /**
    * Creates an OracleHandler.
    */
   public OracleHandler()
   {
      super();
   }

   // ************************************************************************
   // Public methods
   // ************************************************************************

   /**
    * Inserts a row into the table.
    *
    * <p>This method sets the columns in the row of any primary or unique keys
    * that were generated by the database.</p>
    *
    * @param table Table to insert into.
    * @param row Row to insert.
    * @exception SQLException A database error occurred while inserting data.
    */
   public void insert(Table table, Row row)
      throws SQLException
   {
      checkState();

      // Make and execute the statement...

      PreparedStatement stmt = buildInsert(table, row);
      int numRows = stmt.executeUpdate();

      // This is a list of columns you need to retrieve from the database

      Vector dbGeneratedCols = getDBGeneratedKeyCols(table);

      if(dbGeneratedCols.size() > 0)
      {
         // IMPL: Test that this is actually a statement from Oracle, like so:
         // if(!(stmt instanceof oracle.whatever.Statement))
         //   throw new SQLException("[xmldbms] Invalid DataSource / DataHandler combination.");

         // IMPL: Retrieve all columns in 'dbGeneratedCols' here, somehow.

         // IMPL: Set columns on 'row' like so:
         // ('col' is the column you're setting, 'obj' is the value as an Object)
         //
         //     setColumnValue(row, col, obj);

         throw new SQLException("[xmldbms] Oracle support not implemented. Looking for implementor.");
      }
   }
}
